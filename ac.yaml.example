esphome:
  name: ac01
  platform: ESP32
  board: nodemcu-32s
  includes:
    - ./esphome-panasonic-ac

wifi:
  networks:
    - ssid: "IoT"
      password: "12345678"
  use_address: ac01.example.org

logger:
  level: DEBUG
#  baud_rate: 0 # ESP8266 only

api:
  password: "1234"

ota:
  password: "1234"

# Requires ESPHome 1.15.0+ for the even parity option
uart:
  tx_pin: GPIO17
  rx_pin: GPIO16
  id: ac_uart
  baud_rate: 9600
  parity: EVEN

# Template sensor to show outside temperature reported by AC
sensor:
  - platform: template
    id: ac01_outside_temperature
    name: ac01_outside_temperature
    unit_of_measurement: Â°C
    accuracy_decimals: 0

# Text sensors to determine fixed vertical and horizontal swing position
text_sensor:
  - platform: homeassistant
    id: ac01_vertical_swing
    name: ac01_vertical_swing
    entity_id: input_select.ac01_vertical_swing
    on_value:
      - homeassistant.service:
          service: input_select.select_option
          data_template:
            entity_id: input_select.ac01_vertical_swing
            option: "{{ swing }}"
          variables:
            swing: |-
              return id(ac01_vertical_swing).state;
  - platform: homeassistant
    id: ac01_horizontal_swing
    name: ac01_horizontal_swing
    entity_id: input_select.ac01_horizontal_swing
    on_value:
      - homeassistant.service:
          service: input_select.select_option
          data_template:
            entity_id: input_select.ac01_horizontal_swing
            option: "{{ swing }}"
          variables:
            swing: |-
              return id(ac01_horizontal_swing).state;

# Switch to enable/disable nanoeX
switch:
  - platform: template
    id: ac01_nanoex_switch
    name: ac01_nanoex_switch
    optimistic: true

# Main climate component, switches and sensors are set in the lambda; remove if not wanted
climate:
  - platform: custom
    lambda: |-
      // For DNSK-P11
      // auto ac = new ESPPAC::WLAN::PanasonicACWLAN(id(ac_uart));

      // For CZ-TACG1
      // auto ac = new ESPPAC::CNT::PanasonicACCNT(id(ac_uart));

      ac->set_outside_temperature_sensor(id(ac01_outside_temperature));
      ac->set_vertical_swing_sensor(id(ac01_vertical_swing));
      ac->set_horizontal_swing_sensor(id(ac01_horizontal_swing));
      ac->set_nanoex_switch(id(ac01_nanoex_switch));

      App.register_component(ac);
      return {ac};
    climates:
      - id: ac01
        name: ac01
